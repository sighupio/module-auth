# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: Check for license presence
kind: pipeline
type: docker
node:
  performance: low
clone:
  depth: 1
steps:
  - name: check
    image: docker.io/library/golang:1.21
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .

---
name: Linting
kind: pipeline
type: docker
node:
  performance: low
depends_on:
  - Check for license presence
clone:
  depth: 1
platform:
  os: linux
  arch: amd64
volumes:
  - name: mise-cache
    host:
      path: /root/mise_data_dir
steps:
  - name: Render Manifests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    environment:
      MISE_DATA_DIR: /mise-data
      MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci.toml"
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: mise-cache
        path: /mise-data
    depends_on:
      - clone
    commands:
      - |
        mise use kustomize@5.6.0
        eval "$(mise activate bash --shims)"
      - kustomize build katalog/pomerium > pomerium.yml
      - kustomize build katalog/dex > dex.yml
      - kustomize build katalog/gangplank > gangplank.yml

  - &check-deprecated-apis
    name: check-deprecated-apis-pomerium
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - Render Manifests
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect $${KUBERNETES_MANIFESTS} --ignore-deprecations --target-versions=k8s=v1.33.0
    environment:
      KUBERNETES_MANIFESTS: pomerium.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-dex
    environment:
      KUBERNETES_MANIFESTS: dex.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-gangplank
    environment:
      KUBERNETES_MANIFESTS: gangplank.yml


---
name: E2E Tests on kind clusters version 1.29.0
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
node:
  runner: internal
depends_on:
  - Linting
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: End-to-End Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    network_mode: host
    depends_on:
      - clone
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KUBE_VERSION: "1.29.8"
      KUBECONFIG: kubeconfig-129
      KUBECTL_VERSION: "1.29.1"
    commands:
      - |
        mise use kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 bats@1.11.0 kapp@0.64.2 kind@0.29.0
        eval "$(mise activate bash --shims)"
      - ./scripts/run-e2e-tests.sh

  - name: Destroy Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KIND_VERSION: "0.29.0"
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-129
    commands:
      - |
        mise use kind@$${KIND_VERSION}
        eval "$(mise activate bash --shims)"
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.30.4
kind: pipeline
type: docker

depends_on:
  - Linting

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

steps:
  - name: End-to-End Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    network_mode: host
    depends_on:
      - clone
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KUBE_VERSION: "1.30.4"
      KUBECONFIG: kubeconfig-v1.30.4
      KUBECTL_VERSION: "1.30.1"
    commands:
      - |
        mise use kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 bats@1.11.0 kapp@0.64.2 kind@0.29.0
        eval "$(mise activate bash --shims)"
      - ./scripts/run-e2e-tests.sh

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.31.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-v1.30.4
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.31.1
kind: pipeline
type: docker

depends_on:
  - Linting

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

steps:
  - name: End-to-End Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    network_mode: host
    depends_on:
      - clone
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KUBE_VERSION: "1.31.0"
      KUBECONFIG: kubeconfig-v1.31.0
      KUBECTL_VERSION: "1.31.1"
    commands:
      - |
        mise use kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 bats@1.11.0 kapp@0.64.2 kind@0.29.0
        eval "$(mise activate bash --shims)"
      - ./scripts/run-e2e-tests.sh

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.31.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-v1.31.0
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.32.2
kind: pipeline
type: docker

depends_on:
  - Linting
  - E2E Tests on kind clusters version 1.31.1

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

steps:
  - name: End-to-End Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    network_mode: host
    depends_on:
      - clone
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KUBE_VERSION: "1.32.2"
      KUBECONFIG: kubeconfig-v1.32.2
      KUBECTL_VERSION: "1.32.2"
    commands:
      - |
        mise use kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 bats@1.11.0 kapp@0.64.2 kind@0.29.0
        eval "$(mise activate bash --shims)"
      - ./scripts/run-e2e-tests.sh

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.27.0_1.32.2_5.6.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-v1.32.2
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.33.0
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
node:
  runner: internal
depends_on:
  - Linting
  - E2E Tests on kind clusters version 1.32.2
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: End-to-End Tests
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    network_mode: host
    depends_on:
      - clone
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KUBE_VERSION: "1.33.0"
      KUBECONFIG: kubeconfig-133
      KUBECTL_VERSION: "1.33.4"
    commands:
      - |
        mise use kubectl@$${KUBECTL_VERSION} kustomize@5.6.0 bats@1.11.0 kapp@0.64.2 kind@0.29.0
        eval "$(mise activate bash --shims)"
      - ./scripts/run-e2e-tests.sh

  - name: Destroy Kind Cluster
    image: quay.io/sighup/mise:v2025.4.4
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: mise-cache
        path: /mise-data
    environment:
      MISE_DATA_DIR: /mise-data
      KIND_VERSION: "0.29.0"
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-133
    commands:
      - |
        mise use kind@$${KIND_VERSION}
        eval "$(mise activate bash --shims)"
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: release
kind: pipeline
type: docker

depends_on:
  - E2E Tests on kind clusters version 1.29.0
  - E2E Tests on kind clusters version 1.30.4
  - E2E Tests on kind clusters version 1.31.1
  - E2E Tests on kind clusters version 1.32.2
  - E2E Tests on kind clusters version 1.33.0

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
    exclude:
      - refs/tags/e2e-**

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-auth-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-auth-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-auth-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
